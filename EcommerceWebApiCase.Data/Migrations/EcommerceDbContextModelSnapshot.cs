// <auto-generated />
using System;
using EcommerceWebApiCase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcommerceWebApiCase.Data.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    partial class EcommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "tr",
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1575),
                            Description = "Türkçe",
                            IsActive = true,
                            Name = "Türkçe",
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1572)
                        },
                        new
                        {
                            Id = 2,
                            Code = "en",
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1577),
                            Description = "İngilizce",
                            IsActive = true,
                            Name = "İngilizce",
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1577)
                        });
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1886),
                            ImageUrl = "img/product/product.jpg",
                            IsActive = true,
                            Price = 500m,
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1886)
                        });
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1744),
                            IsActive = true,
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1744)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1747),
                            IsActive = true,
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1747)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1749),
                            IsActive = true,
                            ParentCategoryId = 1,
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1749)
                        });
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductCategoryTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCategoryMainId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProductCategoryMainId");

                    b.ToTable("ProductCategoryTranslations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1809),
                            Description = "Elektronik ürünler bu kategoride bulunmaktadır",
                            IsActive = true,
                            LanguageId = 1,
                            Name = "Elektronik",
                            ProductCategoryMainId = 1,
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1810)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1811),
                            Description = "Electronic products are in this category",
                            IsActive = true,
                            LanguageId = 2,
                            Name = "Electronics",
                            ProductCategoryMainId = 1,
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1812)
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1813),
                            Description = "Tabletler bu kategoride bulunmaktadır",
                            IsActive = true,
                            LanguageId = 1,
                            Name = "Tabletler",
                            ProductCategoryMainId = 3,
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1814)
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1822),
                            Description = "Tablets are in this category",
                            IsActive = true,
                            LanguageId = 2,
                            Name = "Tablets",
                            ProductCategoryMainId = 3,
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1823)
                        });
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductFeatureTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductFeatureTypeId");

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2008),
                            Description = "Ekran Boyutu (İnç Cinsinden)",
                            IsActive = true,
                            Name = "Ekran Boyutu",
                            ProductFeatureTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2010),
                            Description = "İşlemci Hızı",
                            IsActive = true,
                            Name = "İşlemci Hızı",
                            ProductFeatureTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2011),
                            Description = "Renk",
                            IsActive = true,
                            Name = "Renk",
                            ProductFeatureTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2013),
                            Description = "Pil Kapasitesi",
                            IsActive = true,
                            Name = "Pil Kapasitesi",
                            ProductFeatureTypeId = 1
                        });
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductFeatureProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductFeatureId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductFeatureId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductFeatureProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2133),
                            IsActive = true,
                            ProductFeatureId = 1,
                            ProductId = 1,
                            Value = "7 inç"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2135),
                            IsActive = true,
                            ProductFeatureId = 1,
                            ProductId = 1,
                            Value = "8 inç"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2136),
                            IsActive = true,
                            ProductFeatureId = 1,
                            ProductId = 1,
                            Value = "10 inç"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2138),
                            IsActive = true,
                            ProductFeatureId = 3,
                            ProductId = 1,
                            Value = "Siyah"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2139),
                            IsActive = true,
                            ProductFeatureId = 3,
                            ProductId = 1,
                            Value = "Beyaz"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2141),
                            IsActive = true,
                            ProductFeatureId = 3,
                            ProductId = 1,
                            Value = "Gümüş"
                        });
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductFeatureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductFeatureType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2064),
                            Description = "Çoktan Seçmeli",
                            IsActive = true,
                            Name = "Lookup",
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2063)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2066),
                            Description = "Var veya Yok",
                            IsActive = true,
                            Name = "CheckBox",
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(2066)
                        });
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductMainId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("ProductMainId");

                    b.ToTable("ProductTranslations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1945),
                            Description = "Samsung Tablet 16 Gb ......",
                            IsActive = true,
                            LanguageId = 1,
                            Name = "Samsung Tablet",
                            ProductMainId = 1,
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1946)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1948),
                            Description = "Eng Samsung Tablet 16 Gb ......",
                            IsActive = true,
                            LanguageId = 2,
                            Name = "Samsung Tablet Eng",
                            ProductMainId = 1,
                            UpdatedDate = new DateTime(2023, 2, 22, 5, 5, 28, 320, DateTimeKind.Local).AddTicks(1948)
                        });
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.Product", b =>
                {
                    b.HasOne("EcommerceWebApiCase.Data.Entities.ProductCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductCategory", b =>
                {
                    b.HasOne("EcommerceWebApiCase.Data.Entities.ProductCategory", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductCategoryTranslation", b =>
                {
                    b.HasOne("EcommerceWebApiCase.Data.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommerceWebApiCase.Data.Entities.ProductCategory", "ProductCategoryMain")
                        .WithMany("Translations")
                        .HasForeignKey("ProductCategoryMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("ProductCategoryMain");
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductFeature", b =>
                {
                    b.HasOne("EcommerceWebApiCase.Data.Entities.ProductCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommerceWebApiCase.Data.Entities.ProductFeatureType", "ProductFeatureType")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("ProductFeatureTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ProductFeatureType");
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductFeatureProduct", b =>
                {
                    b.HasOne("EcommerceWebApiCase.Data.Entities.ProductFeature", "ProductFeature")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("ProductFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommerceWebApiCase.Data.Entities.Product", "Product")
                        .WithMany("ProductFeatureProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductFeature");
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductTranslation", b =>
                {
                    b.HasOne("EcommerceWebApiCase.Data.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcommerceWebApiCase.Data.Entities.Product", "ProductMain")
                        .WithMany("Translations")
                        .HasForeignKey("ProductMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("ProductMain");
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.Product", b =>
                {
                    b.Navigation("ProductFeatureProducts");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductCategory", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("Products");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductFeature", b =>
                {
                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("EcommerceWebApiCase.Data.Entities.ProductFeatureType", b =>
                {
                    b.Navigation("ProductFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
